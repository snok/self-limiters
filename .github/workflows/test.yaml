name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  cargo_build:
    name: "cargo build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v3
        env:
          cache-name: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: cargo build --release

  maturin_build:
    name: "maturin build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: pip install maturin
      - uses: actions/cache@v3
        env:
          cache-name: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: maturin build -b pyo3

  pre_commit:
    name: "pre-commit"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: pip install pre-commit
      - uses: actions/cache@v3
        id: pre-commit-cache
        with:
          path: ~/.cache/pre-commit
          key: key-0
      - run: pre-commit run --all-files

  python_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8.14", "3.9.14", "3.10.7", ]  # add 3.11 when uvloop issue is resolved
    services:
      redis:
        image: redis:6.2.5-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - '127.0.0.1:6389:6379'
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: llvm-tools-preview
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/cache@v3
        id: cache-venv-and-cargo
        with:
          path: |
            .venv
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}-${{ hashFiles('**/Cargo.lock') }}-0
      - run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -U pip setuptools wheel
          pip install -r dev-requirements.txt
        if: steps.cache-venv-and-cargo.outputs.cache-hit != 'true'
      - name: Run tests
        run: |
          source .venv/bin/activate
          source <(cargo llvm-cov show-env --export-prefix)
          export CARGO_TARGET_DIR=$CARGO_LLVM_COV_TARGET_DIR
          export CARGO_INCREMENTAL=1
          cargo llvm-cov clean --workspace
          cargo test
          maturin develop
          coverage run -m pytest tests && coverage xml
          cargo llvm-cov report --lcov --output-path coverage.lcov
      - uses: codecov/codecov-action@v3
        with:
          files: coverage.lcov,coverage.xml
        if: matrix.python-version == '3.10.7'
